{"version":3,"file":"static/js/544.90694a99.chunk.js","mappings":"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","sources":["api/getMovies.js","components/MovieGallery/MovieGallery.styled.jsx","components/MoviesList/MoviesList.jsx","components/Text/Text.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst options = {\n  headers: {\n    Authorization: `Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMWU2NDllMjM3NjZjMzgxOWQxOTUzYmFjN2MzZGRmZCIsInN1YiI6IjY2MzJhOTU4NjY1NjVhMDEyODEzNjVmMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7klu0JTfj-efLqCNSdzVcSSUcqMA2ke2U_jRgKGsfbQ`,\n    Accept: 'application/json',\n  },\n  params: {\n    language: 'en-US',\n  },\n};\n\nexport const getTrending = async () => {\n  // const { data } = await axios.get(`trending/all/day`, options);\n  const { data } = await axios.get(`trending/movie/day`, options);\n\n  return data;\n};\n\nexport const searchMovies = async (\n  query\n  // releaseYear = '',\n  // page = 1,\n  // region = '',\n  // year = ''\n) => {\n  const { data } = await axios.get(\n    // `search/movie?query=${query}&include_adult=false&language=en-US&primary_release_year=${releaseYear}&page=${page}&region=${region}&year=${year}`,\n    `search/movie?query=${query}&language=en-US`,\n    options\n  );\n\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`, options);\n\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`, options);\n\n  return data;\n};\n\nexport const getMovieReviews = async (\n  movieId,\n  language = 'en-US',\n  page = 1\n) => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?language=${language}&page=${page}`,\n    options\n  );\n\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const MovieGallery = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n\n  grid-gap: ${({ theme }) => theme.spacing(4)};\n`;\n\nexport const GalleryItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: fit-content;\n  border-radius: ${({ theme }) => theme.spacing(1)};\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  overflow: hidden;\n\n  transition: all ${({ theme }) => theme.animation.cubicBezier};\n\n  &:hover,\n  &:focus {\n    scale: 1.05;\n    box-shadow: ${({ theme }) => theme.shadows.regular};\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n`;\n\nexport const CardText = styled.p`\n  margin: 0 auto;\n  padding: 5px;\n  width: fit-content;\n  font-size: ${({ theme }) => theme.fontSizes.small};\n`;\n","import {\n  CardText,\n  GalleryItem,\n  MovieGallery,\n} from 'components/MovieGallery/MovieGallery.styled';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const defaultImg =\n    'https://glavcom.ua/img/article/9139/95_main-v1678685008.jpg';\n\n  const location = useLocation();\n\n  console.log(movies);\n\n  return (\n    <MovieGallery>\n      {movies.map(movie => (\n        <GalleryItem key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                  : defaultImg\n              }\n              width={250}\n              alt=\"poster\"\n            />\n            <CardText>{movie.original_title}</CardText>\n            <CardText>\n              {`Released: ${new Date(movie.release_date).toLocaleDateString()}`}\n            </CardText>\n          </Link>\n        </GalleryItem>\n      ))}\n    </MovieGallery>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  margin: ${({ theme }) => theme.spacing(5)} auto;\n  justify-content: center;\n  font-size: ${({ theme }) => theme.fontSizes.medium};\n  text-align: ${({ textAlign }) => (!textAlign ? 'left' : textAlign)};\n`;\n","import { getTrending } from 'api/getMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Text } from 'components/Text/Text.styled';\n// import { Header } from 'components/Header/Header';\nimport { useEffect, useState } from 'react';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isError, setIsError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTrending()\n      .then(data => setMovies(data.results))\n      .catch(err => {\n        alert(err.message);\n        setIsError(err.message);\n      })\n      .finally(setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {isError && (\n        <Text textAlign=\"center\">\n          Something went wrong, try again later... ðŸ˜¥\n        </Text>\n      )}\n      <MoviesList movies={movies} />\n      {/* {showMoreBtn && <Button onClick={handleClick}>Load more</Button>} */}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["axios","options","headers","Authorization","Accept","params","language","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","sent","abrupt","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_yield$axios$get2","_context2","concat","_x","getMovieDetails","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","getMovieCredits","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getMovieReviews","_ref5","_callee5","page","_yield$axios$get5","_args5","_context5","length","undefined","_x4","MovieGallery","styled","_templateObject","_taggedTemplateLiteral","theme","spacing","GalleryItem","_templateObject2","shadows","small","animation","cubicBezier","regular","CardText","_templateObject3","_ref6","fontSizes","MoviesList","movies","location","useLocation","console","log","_jsx","children","map","movie","_jsxs","Link","to","id","state","from","src","poster_path","width","alt","original_title","Date","release_date","toLocaleDateString","Text","medium","textAlign","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","isError","setIsError","_useState5","_useState6","isLoading","setIsLoading","useEffect","then","results","catch","err","alert","message","finally","_Fragment","Loader"],"sourceRoot":""}